let board = Array(9).fill().map(() => Array(9).fill(0));
let cellSize = 50;
let solving = false;
let toggle = false;

function setup() {
  createCanvas(450, 450);
  frameRate(60);
  setInterval(toggleAction, 1000);
}

function draw() {
  background(30);
  drawGrid();
  fillBoard();
}

function drawGrid() {
  strokeWeight(2);
  for (let i = 0; i <= 9; i++) {
    stroke(i % 3 === 0 ? 200 : 100);
    line(i * cellSize, 0, i * cellSize, height);
    line(0, i * cellSize, width, i * cellSize);
  }
}

function fillBoard() {
  textSize(24);
  textAlign(CENTER, CENTER);
  fill(255);
  for (let row = 0; row < 9; row++) {
    for (let col = 0; col < 9; col++) {
      if (board[row][col] !== 0) {
        text(board[row][col], col * cellSize + cellSize / 2, row * cellSize + cellSize / 2);
      }
    }
  }
}

function isValid(row, col, num) {
  for (let i = 0; i < 9; i++) {
    if (board[row][i] === num || board[i][col] === num) return false;
  }
  let boxRow = Math.floor(row / 3) * 3;
  let boxCol = Math.floor(col / 3) * 3;
  for (let i = 0; i < 3; i++) {
    for (let j = 0; j < 3; j++) {
      if (board[boxRow + i][boxCol + j] === num) return false;
    }
  }
  return true;
}

function generateRandomSudoku() {
  board = Array(9).fill().map(() => Array(9).fill(0));
  solveStep(0, 0);
  removeNumbers(40);
}

function removeNumbers(count) {
  for (let i = 0; i < count; i++) {
    let row, col;
    do {
      row = floor(random(9));
      col = floor(random(9));
    } while (board[row][col] === 0);
    board[row][col] = 0;
  }
}

function solveSudoku() {
  solving = true;
  solveStep(0, 0);
  solving = false;
}

function solveStep(row, col) {
  if (row === 9) return true;
  let nextRow = col === 8 ? row + 1 : row;
  let nextCol = (col + 1) % 9;
  if (board[row][col] !== 0) return solveStep(nextRow, nextCol);
  let nums = [...Array(9).keys()].map(n => n + 1).sort(() => 0.5 - Math.random());
  for (let num of nums) {
    if (isValid(row, col, num)) {
      board[row][col] = num;
      if (solveStep(nextRow, nextCol)) return true;
      board[row][col] = 0;
    }
  }
  return false;
}

function toggleAction() {
  if (toggle) {
    generateRandomSudoku();
  } else {
    solveSudoku();
  }
  toggle = !toggle;
}

function mousePressed() {
  if (!solving) solveSudoku();
}
